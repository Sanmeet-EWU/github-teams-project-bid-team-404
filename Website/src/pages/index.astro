---
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import { fetchRecipes } from '../dataFetch';
import BaseHead from '../components/BaseHead.astro';

// Define the Recipe interface
interface Recipe {
  Author: string;
  Title: string;
  Image: string;
  Instructions: string;
  Ingredients: string[];
  Tags: string[];
  PrepTime: string;
  CookTime: string;
  Servings: string;
  Slug: string;
  Subtitle: string;
}

// Fetch recipes and cast them to an array of Recipe
let recipes: Recipe[] = [];
try {
  const fetchedRecipes = await fetchRecipes();
  recipes = fetchedRecipes as Recipe[];
  console.log('Fetched recipes:', recipes); // Debugging
} catch (error) {
  console.error('Error fetching recipes:', error);
  recipes = [];
}
---

<html lang="en">
<BaseHead />
<body>
  <Header />
  <main class="home-main">
    <h1>Hot Recipes</h1>
    <section class="recipes-section">
      {recipes.length > 0 ? (
        recipes.map((recipe) => (
          <article class="recipe-card">
            <img src={recipe.Image} alt={recipe.Title} class="recipe-image" />
            <div class="recipe-content">
              <h2><a href={`/recipes/${recipe.Slug}`} class="recipe-title">{recipe.Title}</a></h2>
              <p>Chef {recipe.Author}</p>
              <p>{recipe.Subtitle}</p>
              <div class="recipe-meta">
                <span>Prep Time: {recipe.PrepTime} min</span>
                <span>Cook Time: {recipe.CookTime} min</span>
                <span>Servings: {recipe.Servings}</span>
              </div>
              <div class="recipe-tags">
                {(recipe.Tags || []).map(tag => (
                  <span class="tag">{tag}</span>
                ))}
              </div>
            </div>
          </article>
        ))
      ) : (
        <p>No recipes found.</p>
      )}
    </section>
  </main>
  <Footer />
</body>
</html>
