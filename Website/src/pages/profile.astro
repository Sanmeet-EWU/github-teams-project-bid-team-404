---
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import BaseHead from '../components/BaseHead.astro';
import "../styles/profile.css";
---

<html lang="en">
<BaseHead/>
<body>
  <Header/>
  <main class="profile-main">
    <div class="profile-header">
      <div class="profile-picture">
        <img id="profile-picture" src="default-profile-pic.png" alt="Profile Picture">
      </div>
      <div class="profile-info">
        <h1 id="profile-username">No Username</h1>
        <p id="profile-bio">No Bio</p>
        <div class="profile-social">
          <a href="#" id="social-facebook">Facebook</a>
          <a href="#" id="social-twitter">Twitter</a>
          <a href="#" id="social-instagram">Instagram</a>
        </div>
      </div>
    </div>
    <div class="profile-stats">
      <div class="stat-item">Posts <span id="posts-count">0</span></div>
      <div class="stat-item">Comments <span id="comments-count">0</span></div>
      <div class="stat-item">Suggestions <span id="suggestions-count">0</span></div>
      <div class="stat-item">Like/Dislike <span id="likes-count">0</span></div>
    </div>
    <div class="profile-posts" id="profile-posts">
      Loading posts...
    </div>
    <button id="edit-button">Edit Profile</button>
    <form id="profileForm" style="display: none;">
      <label for="username">Username</label>
      <input type="text" id="username">
      <label for="bio">Bio</label>
      <textarea id="bio"></textarea>
      <label for="profilePicture">Profile Picture URL</label>
      <input type="text" id="profilePicture">
      <label for="profileImageUpload">Upload Profile Picture</label>
      <input type="file" id="profileImageUpload" accept="image/*">
      <label for="facebook">Facebook URL</label>
      <input type="text" id="facebook">
      <label for="twitter">Twitter URL</label>
      <input type="text" id="twitter">
      <label for="instagram">Instagram URL</label>
      <input type="text" id="instagram">
      <button type="submit">Update Profile</button>
    </form>
    <p id="profileSuccessMessage"></p>
    <p id="profileErrorMessage"></p>
  </main>
  <Footer/>

  <script type="module">
    import { collection, getDocs, query, where, doc, setDoc } from "../../node_modules/firebase/firestore";
    import { onAuthStateChanged } from "../../node_modules/firebase/auth";
    import { db, auth } from '../src/firebaseConfig.js';
    import { getStorage, ref, uploadBytes, getDownloadURL } from "../../node_modules/firebase/storage";

    console.log("Initializing Firebase...");

    const storage = getStorage();

    let isEditing = false;

    async function fetchUserData(userEmail) {
      console.log("Fetching user data for email:", userEmail);

      if (!userEmail) {
        console.error("No user email found.");
        return;
      }

      try {
        const userQuery = query(collection(db, "users"), where("email", "==", userEmail));
        const querySnapshot = await getDocs(userQuery);

        if (!querySnapshot.empty) {
          const userDoc = querySnapshot.docs[0];
          const userData = userDoc.data();
          console.log("User data fetched:", userData);
          displayUserData(userData);
        } else {
          console.error("User not found.");
        }
      } catch (error) {
        console.error("Error fetching user data:", error);
      }
    }

    function displayUserData(userData) {
      document.getElementById("profile-username").textContent = userData.username || "No Username";
      document.getElementById("profile-bio").textContent = userData.bio || "No Bio";
      document.getElementById("profile-picture").src = userData.profilePic || 'default-profile-pic.png';
      document.getElementById("social-facebook").href = userData.facebook || "#";
      document.getElementById("social-twitter").href = userData.twitter || "#";
      document.getElementById("social-instagram").href = userData.instagram || "#";

      // Populate the form fields with the current user data
      document.getElementById("username").value = userData.username || "";
      document.getElementById("bio").value = userData.bio || "";
      document.getElementById("profilePicture").value = userData.profilePic || "";
      document.getElementById("facebook").value = userData.facebook || "";
      document.getElementById("twitter").value = userData.twitter || "";
      document.getElementById("instagram").value = userData.instagram || "";
    }

    function toggleEdit() {
      isEditing = !isEditing;
      document.getElementById('profileForm').style.display = isEditing ? 'block' : 'none';
      document.getElementById('edit-button').textContent = isEditing ? 'Cancel' : 'Edit Profile';
    }

    async function updateUserData(event) {
      event.preventDefault();
      console.log("Updating user data...");

      const username = document.getElementById('username').value;
      const bio = document.getElementById('bio').value;
      const profilePicture = document.getElementById('profilePicture').value;
      const facebook = document.getElementById('facebook').value;
      const twitter = document.getElementById('twitter').value;
      const instagram = document.getElementById('instagram').value;

      try {
        const user = auth.currentUser;
        if (user) {
          const userId = user.uid;

          let profilePicURL = profilePicture;

          // Handle profile image upload
          const fileInput = document.getElementById('profileImageUpload');
          if (fileInput.files.length > 0) {
            const file = fileInput.files[0];
            const storageRef = ref(storage, `profile_pictures/${userId}/${file.name}`);
            await uploadBytes(storageRef, file);
            profilePicURL = await getDownloadURL(storageRef);
          }

          await setDoc(doc(db, 'users', userId), {
            username,
            bio,
            profilePic: profilePicURL,
            facebook,
            twitter,
            instagram
          }, { merge: true });

          document.getElementById('profileSuccessMessage').textContent = 'Profile updated successfully!';
          document.getElementById('profileErrorMessage').textContent = '';
          console.log("Profile updated successfully.");

          // Update displayed data
          document.getElementById('profile-username').textContent = username;
          document.getElementById('profile-bio').textContent = bio;
          document.getElementById('profile-picture').src = profilePicURL;
          document.getElementById('social-facebook').href = facebook || "#";
          document.getElementById('social-twitter').href = twitter || "#";
          document.getElementById('social-instagram').href = instagram || "#";

          // Exit edit mode
          toggleEdit();
        } else {
          throw new Error('No user is signed in');
        }
      } catch (error) {
        document.getElementById('profileErrorMessage').textContent = `Error updating profile: ${error.message}`;
        document.getElementById('profileSuccessMessage').textContent = '';
        console.error("Error updating profile:", error);
      }
    }

    window.addEventListener('DOMContentLoaded', () => {
      console.log("Page loaded. Checking auth state...");
      onAuthStateChanged(auth, (user) => {
        if (user) {
          const userEmail = user.email;
          console.log("User is signed in:", user);
          fetchUserData(userEmail);
        } else {
          console.error("No user is signed in.");
        }
      });
      document.getElementById('edit-button').addEventListener('click', toggleEdit);
      document.getElementById('profileForm').addEventListener('submit', updateUserData);
    });
  </script>

</body>
</html>