---
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import { fetchRecipes } from '../../dataFetch';
import BaseHead from '../../components/BaseHead.astro';
import "../../styles/post.css";

interface Recipe {
  Author: string;
  Title: string;
  Image: string;
  Instructions: string;
  Ingredients: string[];
  Tags: string[];
  PrepTime: string;
  CookTime: string;
  Servings: string;
  Slug: string;
  Subtitle: string; // Add Subtitle field
}

export async function getStaticPaths() {
  const recipes: Recipe[] = await fetchRecipes();
  return recipes.map((recipe) => ({
    params: { slug: recipe.Slug }
  }));
}

const { slug } = Astro.params;
const recipes: Recipe[] = await fetchRecipes();
const recipe = recipes.find((r) => r.Slug === slug);

if (!recipe) {
  throw new Error(`Recipe not found for slug: ${slug}`);
}
---

<html lang="en">
<BaseHead />
<body>
  <Header />
  <main class="post-main">
    <h1>{recipe.Title}</h1>
    <div class="post-meta">
      <span class="servings">Serves: {recipe.Servings}</span>
      <span class="prep-time">Prep Time: {recipe.PrepTime}</span>
      <span class="cook-time">Cook Time: {recipe.CookTime}</span>
    </div>
    <img src={recipe.Image} alt={recipe.Title} class="post-image" />
    <div class="post-content">
      <div class="post-directions">
        <h2>Directions:</h2>
        <p>{recipe.Instructions}</p>
      </div>
      <div class="post-ingredients">
        <h2>Ingredients:</h2>
        <ul>
          {recipe.Ingredients.map(ingredient => (
            <li>{ingredient}</li>
          ))}
        </ul>
      </div>
    </div>
    <div class="post-tags">
      <h3>Tags</h3>
      <div class="tags">
        {recipe.Tags.map(tag => (
          <span class="tag">{tag}</span>
        ))}
      </div>
    </div>

    <!-- Comments Section -->
    <div class="comments-section">
      <h2>Comments</h2>
      <div id="comments-list">
        <!-- Comments will be loaded here -->
      </div>

      <!-- Comment Form -->
      <div id="commentFormContainer" class="hidden">
        <h3>Add a Comment</h3>
        <form id="addCommentForm">
          <textarea id="commentText" rows="4" required></textarea>
          <button type="submit">Submit</button>
          <p class="error" id="commentErrorMessage"></p>
        </form>
      </div>
      <p id="signInMessage" class="hidden">Please <a href="/signin">sign in</a> to add a comment.</p>
    </div>
  </main>
  <Footer />
  <script type="module" src="/src/scripts/comments.js"></script>
</body>
</html>
